/* Generated By:JavaCC: Do not edit this line. compiladorConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compiladorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Res_real = 11;
  /** RegularExpression Id. */
  int Res_int = 12;
  /** RegularExpression Id. */
  int Res_float = 13;
  /** RegularExpression Id. */
  int Res_else = 14;
  /** RegularExpression Id. */
  int Res_if = 15;
  /** RegularExpression Id. */
  int Res_return = 16;
  /** RegularExpression Id. */
  int Res_void = 17;
  /** RegularExpression Id. */
  int Res_while = 18;
  /** RegularExpression Id. */
  int Op_Suma = 19;
  /** RegularExpression Id. */
  int Op_Resta = 20;
  /** RegularExpression Id. */
  int Op_Mult = 21;
  /** RegularExpression Id. */
  int Op_Div = 22;
  /** RegularExpression Id. */
  int Op_Menor = 23;
  /** RegularExpression Id. */
  int Op_Mayor = 24;
  /** RegularExpression Id. */
  int Op_Menor_Igual = 25;
  /** RegularExpression Id. */
  int Op_Mayor_Igual = 26;
  /** RegularExpression Id. */
  int Op_Diferente = 27;
  /** RegularExpression Id. */
  int Op_Asignacion = 28;
  /** RegularExpression Id. */
  int Op_Doble_Igual = 29;
  /** RegularExpression Id. */
  int Op_Punto_Coma = 30;
  /** RegularExpression Id. */
  int Op_Coma = 31;
  /** RegularExpression Id. */
  int Op_Parentesis_Izq = 32;
  /** RegularExpression Id. */
  int Op_Parentesis_Der = 33;
  /** RegularExpression Id. */
  int Op_Corchete_Izq = 34;
  /** RegularExpression Id. */
  int Op_Corchete_Der = 35;
  /** RegularExpression Id. */
  int Op_Llave_Izq = 36;
  /** RegularExpression Id. */
  int Op_Llave_Der = 37;
  /** RegularExpression Id. */
  int Num_Entero = 38;
  /** RegularExpression Id. */
  int Num_Entero_Invalido = 39;
  /** RegularExpression Id. */
  int Num_Decimal = 40;
  /** RegularExpression Id. */
  int Num_Decimal_Invalido = 41;
  /** RegularExpression Id. */
  int Id = 42;
  /** RegularExpression Id. */
  int Id_Invalido = 43;
  /** RegularExpression Id. */
  int Id_Desc_inv = 44;
  /** RegularExpression Id. */
  int NoValido = 45;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int Comentario_Muchos = 1;
  /** Lexical state. */
  int Comentario_Uno = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 7>",
    "\"//\"",
    "\"\\n\"",
    "<token of kind 10>",
    "\"real\"",
    "\"int\"",
    "\"float\"",
    "\"else\"",
    "\"if\"",
    "\"return\"",
    "\"void\"",
    "\"while\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"=\"",
    "\"==\"",
    "\";\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "<Num_Entero>",
    "<Num_Entero_Invalido>",
    "<Num_Decimal>",
    "<Num_Decimal_Invalido>",
    "<Id>",
    "<Id_Invalido>",
    "<Id_Desc_inv>",
    "<NoValido>",
  };

}
